Work in progress !


Note du 26/01:
J'ai réglé le problème avec les compléments d'enchantements (mauvaise classe), mais ils peuvent encore faire crasher le jeu si on les cast sur le mauvais item, par exemple.
Objectif pour demain matin : déplacer le choix des compléments chez le joueur, et au moment de l'utilisation de la touche, pour en finir avec le rework des inputs.
Bonus : adjoindre ces modifications au système des held keys (méthode recontrole() du joueur)



Nouvel objectif : l'organisation du main, la sauvegarde externe des parties
Travail en cours : la structure du main
- Penser et structurer le main
- Sauvegarder les éléments essentiels
- Uniformiser les inputs
- Numérotation des frames pour les illustrations
Au passage :
- Fin du travail sur l'affichage (arbre élémental, attaques)
- Rendre fonctionnels tous les choix, puis les conditionner
Si j'ai le temps :
- Créer les premiers humains
- Créer les premiers monstres
- Faire utiliser les items par les pnjs


Structure du main :
- Récupération des inputs 
  Dans quelle boucle les envoyer ? = Variable, dans le main ou le controleur ?
  - Boucle 'classique' (inputs rentrent vers le milieu du tour)
  - Boucle de choix d'action (vient du 'fait_agir')
  - Boucle de choix de niveaux/classes/etc. (fin du tour)
  - Boucle de modification des commandes




Problème d'input :
Pygame ne répète qu'une touche à la fois ! Or on veut marche ET s'orrienter, ou attaquer ET s'orrienter
Pourquoi est-ce que get_pressed() ne convenait pas ?
Parce qu'on bougeait souvent de deux cases.

Idée 3 :
Limiter le get_pressed() pour quand le joueur doit agir (l'esprit qui le contient appelle une fonction avec le get_pressed() ?)
Et continuer à utiliser le KEY_DOWN en permanence

Idée 1 :
Simuler la répétition des touches, pour que ça répète plusieurs fois ;
Ou éditer le code de pygame, pour qu'il fonctionne correctement ;
Ou contacter les gens de pygame, pour qu'ils modifient ça dans leur prochain update.

Idée 2 :
Garder un trace du dernier skill utilisé (ou de la dernière touche dont le skill a effectivement été utilisé, mais c'est plus compliqué) et surveiller les KEY_UP.
L'idée étant : la touche est appuyé pendant un temps très court, on veut le savoir !
               la touche est relachée pendant le tour, on ne veut pas le prendre en compte !
               la touche est réappuyée, on la reprend en compte même si elle est relachée plus tard !
Donc : les KEY_DOWN comme d'habitude
       Les get_pressed() comme d'habitude
       les KEY_UP en combinaison avec une variable pour savoir si le skill a déjà été utilisé au tour précédent, auquel cas on le lache juste un peu tard
       la variable est purgée dès que le KEY_UP est détecté, et ne se rerempli qu'à la prochaine action
       tout ça sans géner les autres inputs



Messages d'entrée pour certains étages ?

Idée : l'une des améliorations des flèches, voire de tous le projectiles pourrait consister à les faire traverser les alliés sans les toucher

Idées de lore à disperser dans les niveaux :

"Nombreux sont ceux qui pensent que la voie de la magie est aussi la voie de la connaissance. Mais la magie est avant tout la voie de l'imagination, du refus de la réalité."
pour guider les joueurs qui ont pris le hint de Dev vers la voie de la connaissance, donc avant la première montée de niveau.

"Les attribus élémentaires sont un sujet complexe et mystérieux. Prenons l'exemple des maladies :
   - Les maladies sont un instrument de mort. Dans le labyrinthe, où voir ses ennemis peut faire toute la différence, la mort est associée à l'ombre. On pourrait donc penser que les maladies sont associées à l'élément ombre.
   - Mais les maladies se propagent par le biais de virus, qui sont une forme de vie. Invoquer une maladie revient donc à créer la vie, et dans le labyrinthe, la vie est associée à l'élément terre.
   - Le caractère contagieux, presque éruptif des maladies les lient au contraire à l'élément feu.
   - Mais la lente agonie que causent certaines maladies n'est pas sans rappeler l'engourdissement de la magie de congélation, liée à l'élément glace.
En réalité, l'affinité élémentale des maladies dépend de la maladie en question, mais aussi parfois du mage responsable de son apparition. Bien malin qui peut dire, sans l'avoir observé, à quel élément est rattaché tel ou tel phénomène."
pour informer les joueurs sur les maladies, et indiquer que l'observation permet de connaitre l'affinité de quelquechose.


Notes de trucs à améliorer :
- Réglage du nombre de tours par seconde. Please.


À réflechir sérieusement :
- Il serait bien de ne pas faire reposer tout le développement de personnage sur les choix des montées de niveau (les arbres). En particulier, le joueur doit pouvoir progresser après avoir atteint le niveau 10.
- Les sous-classes obtenues à la fin vont bien-sûr ce développer plus tardivement, et permettre au joueur de continuer à se développer (mais sans changer d'orientation, puisqu'il ne peut plus faire de choix).
- Le joueur peut aussi se développer grâce aux objets qu'il trouve (exemple : le personnage de type Tank, qui progresse en remplaçant son armure par une nouvelle plus forte).
- Risque : un joueur centré sur la magie peut récupérer une armure destinée à un joueur de type défensif, et obtenir une très bonne défense qui déséquilibre son personnage (et le rend trop fort).
- Contre-mesure : modifier les items disponibles en fonction des choix du joueur ;
- Mais : je n'ai pas envie de faire ça comme ça, et ces items peuvent servir aux compagnons du joueur.
- Autre contre-mesure : un joueur qui n'a pas choisi le skill Lancer ne pourra jamais rien faire d'utile avec une flèche. Cette contre-mesure est dificilement applicable au port d'armures.
- Aussi : un sort, aussi puissant soit-il, ne sert à rien si on n'a pas suffisament de mana pour le lancer. /!\ Faire attention à ce que l'on peut ou ne peut pas obtenir à l'aide d'objets.
- Je suis en mesure de créer des zones qui refusent tel ou tel type d'agissant, y compris sur des critères de classes. Mais le joueur avec une construction centrée sur l'observation doit pouvoir tout explorer, donc pas de loots distincts.
- Attention aussi au voleur, qui pourra récupérer beaucoup d'objets différends. En même temps, c'est sa façon de gagner. Faire de la capacité à voir et collecter les objets une stratégie à part entière ?
- Idée : certains objets sont nécessaires à l'évolution de certaines classes ou skills. Par exemple, un objet possédé par l'un des humains du jeu est nécessaire au développement d'un voleur.
- Aussi : avoir monté une classe à un certain niveau, ou posséder un certain objet est une condition de déverouillage d'un choix de la classe principale.
- Ou encore : passer telle classe du niveau x au niveau y est un des choix de la classe principale.
- Sauf qu'il faut arriver au bon niveau de la classe principale au bon moment, peu probable. Une dépendance à des objets uniques rend le jeu impossible pour un non-initié, et les objets utiles à une autre construction de personnage sont déjà suffisament ennuyeux en un seul exemplaire.
- Certaines classes ne peuvent pas se reposer non plus sur leurs alliés humains. Tout ça fait beaucoup d'interdépendances des éléments du jeu à gérer, mais c'est ce qui le rend marrant !

Garder une trace du code couleur, pour faciliter les modifications futures.
